// C program using standard library functions: malloc(), calloc(), free() and realloc()

//malloc()-The malloc() function reserves a block of memory of the specified number of bytes.
//And, it returns a pointer of type void which can be casted into pointer of any form.
//Syntax of malloc()
//ptr = (cast-type*) malloc(byte-size)
//Example:

//ptr = (int*) malloc(100 * sizeof(int));

//calloc()-The name "calloc" stands for contiguous allocation.
//calloc() allocates multiple blocks of memory and initializes them to zero.
//Syntax of calloc()
//ptr = (cast-type*)calloc(n, element-size);
//Example:
//ptr = (float*) calloc(25, sizeof(float));

//C free()
//Dynamically allocated memory created with either calloc() or malloc() doesn't get freed on their own. 
//You must explicitly use free() to release the space.
//Syntax of free()
//free(ptr);

//C realloc()
//If the dynamically allocated memory is insufficient or more than required, you can change the size of previously allocated memory 
using realloc() function.
//Syntax of realloc()
//ptr = realloc(ptr, x);
//Here, ptr is reallocated with new size x.

//Program using malloc and free functions
#include<stdio.h>
#include<stdlib.h>
int main()
{
int n,i,*ptr,sum=0;
printf("Enter no. of elements");
scanf("%d",&n);
ptr=(int*) malloc(n*sizeof(int));
if (ptr==NULL)
{
	printf("Error memory not allocted");
	exit(0);
}
printf("Enter elements:");
for(i=0;i<n;i++)
{
	scanf("%d",&ptr[i]);
	sum+=*(&ptr[i]);
}
printf("Sum=%d",sum);
free(ptr);
return 0;
}
//Program using calloc and free functions

#include <stdio.h>
#include <stdlib.h>

int main()
{
    int n, i, *ptr, sum = 0;
    printf("Enter number of elements: ");
    scanf("%d", &n);

    ptr = (int*) calloc(n, sizeof(int));
    if(ptr == NULL)
    {
        printf("Error! memory not allocated.");
        exit(0);
    }

    printf("Enter elements: ");
    for(i = 0; i < n; ++i)
    {
        scanf("%d", ptr + i);
        sum += *(ptr + i);
    }

    printf("Sum = %d", sum);
    free(ptr);
    return 0;
}
//Program using realloc function
#include <stdio.h>
#include <stdlib.h>

int main()
{
    int *ptr, i , n1, n2;
    printf("Enter size of array: ");
    scanf("%d", &n1);

    ptr = (int*) malloc(n1 * sizeof(int));

    printf("Addresses of previously allocated memory: ");
    for(i = 0; i < n1; ++i)
         printf("%u\n",ptr + i);

    printf("\nEnter new size of array: ");
    scanf("%d", &n2);
    ptr = realloc(ptr, n2 * sizeof(int));

    printf("Addresses of newly allocated memory: ");
    for(i = 0; i < n2; ++i)
         printf("%u\n", ptr + i);
    return 0;
}














