//Program to check  vowel or consonant
#include<stdio.h>
int main()
{
	char c;
	printf("enter an alphabet");
	scanf("%c",&c);
	if(c=='a'||c=='e'||c=='i'||c=='o'||c=='u'||c=='A'||c=='E'||c=='I'||c=='O'||c=='U')
	{
	printf("the alphabet is a vowel");
    }
	else
	{ 
	printf("the alphabet is a consonant");
	}
}
//Program to check largest among three numbers
#include<stdio.h>
int main()
{
	int a,b,c;
	printf("Enter three numbers");
	scanf("%d%d%d",&a,&b,&c);
	if (a>b&&a>c)
	printf("%d is the greatest",a);
	else if (b>a&&b>c)
	printf("%d is the greatest",b);
	else 
	printf("%d is greatest",c);
}
//program to find factorial of a number
#include<stdio.h>
int main()
{
int i,fact=1,n;
printf("enter the number upto which the factorial has to be calculated");
scanf("%d",&n);
for (i=1;i<=n;i++)
{
	fact=fact*i;
}
printf("the factorial of the number is %d",fact);
}
	//Program to find the sum of natural numbers
 #include<stdio.h>
 int main()
{
	int i,n,sum=0;
printf("enter the number you want to enter ");
scanf("%d",&n);
for(i=1;i<=n;i++)
{
sum=sum+i;
}
printf("The sum is %d",sum);
}
	//Program to print the table of any integer
  #include<stdio.h>
int main()
{
	int i,n;
	printf("Enter the number for multiplication table]");
	scanf("%d",&n);
	for(i=1;i<=10;i++)
	{
     printf("The number is %d\n ",n*i);
	}
	
}
//Program for fibbonacci series
#include<stdio.h>
int main()
{
	int f0=0,f1=1,i,n,sum;
	printf("Enter the number upto which fibbonacci series has to be printed");
	scanf("%d",&n);
	printf("the fibbonacci series is:");
	for (i=0;i<n;i++)
	{
		
		
		printf("%d",f0);
		sum=f0+f1;
		f0=f1;
		f1=sum;
		
		
	}
	return 0;
}
	
//Program to find gcd of two numbers
#include <stdio.h>
int main()
{
    int n1, n2, i, gcd;

    printf("Enter two integers: ");
    scanf("%d %d", &n1, &n2);

    for(i=1; i <= n1 && i <= n2; ++i)
    {
        // Checks if i is factor of both integers
        if(n1%i==0 && n2%i==0)
            gcd = i;
    }

    printf("G.C.D of %d and %d is %d", n1, n2, gcd);

    return 0;
}	
//C program to find lcm of a number
#include <stdio.h>
int main()
{
    int n1, n2, i, gcd, lcm;

    printf("Enter two positive integers: ");
    scanf("%d %d",&n1,&n2);

    for(i=1; i <= n1 && i <= n2; ++i)
    {
        // Checks if i is factor of both integers
        if(n1%i==0 && n2%i==0)
            gcd = i;
    }

    lcm = (n1*n2)/gcd;
    printf("The LCM of two numbers %d and %d is %d.", n1, n2, lcm);

    return 0;
}
//Program to Display English Alphabets in Uppercase and Lowercase

	//Program to Display English Alphabets in Uppercase and Lowercase
#include<stdio.h>
int main()
{
	char c;
	printf("enter the number u want to enter");
	scanf("%c",&c);
	if(c=='U'||c=='u')
	{
		    for(c='A';c<'z';c++)
		printf("%c",c);
		
	}
	else if(c=='l'|| c=='L')
	{
		for(c='a';c<'z';c++)
			printf("%c",c);
	}
	else 
	printf("You entered a wrong statement");
}
	
	//#include <stdio.h>
int main()
{
    long long n;
    int count = 0;

    printf("Enter an integer: ");
    scanf("%lld", &n);

    while(n != 0)
    {
        n = n/10
        n /= 10;
        ++count;
    }

    printf("Number of digits: %d", count);
}
//program to find number of digits in an integer
#include <stdio.h>
int main()
{
    long long n;
    int count = 0;

    printf("Enter an integer: ");
    scanf("%lld", &n);

    while(n != 0)
    {
        // n = n/10
        n /= 10;
        ++count;
    }

    printf("Number of digits: %d", count);
}
//Program to reverse a number
#include <stdio.h>
int main()
{
    int n, reversedNumber = 0, remainder;

    printf("Enter an integer: ");
    scanf("%d", &n);

    while(n != 0)
    {
        remainder = n%10;
        reversedNumber = reversedNumber*10 + remainder;
        n /= 10;
    }

    printf("Reversed Number = %d", reversedNumber);

    return 0;
}
//Program to check for a pallindrome
#include <stdio.h>
int main()
{
    int n, rev = 0, r, Integer;

    printf("Enter an integer: ");
    scanf("%d", &n);

    Integer = n;

    // reversed integer is stored in variable 
    while( n!=0 )
    {
        r = n%10;
        reversedInteger = reversedInteger*10 + remainder;
        n /= 10;
    }

    // palindrome if orignalInteger and reversedInteger are equal
    if (originalInteger == reversedInteger)
        printf("%d is a palindrome.", originalInteger);
    else
        printf("%d is not a palindrome.", originalInteger);
    
    return 0;
   // C Program to Check Whether a Number is Prime or Not
    #include <stdio.h>
int main()
{
    int n, i, flag = 0;

    printf("Enter a positive integer: ");
    scanf("%d", &n);

    for(i = 2; i <= n/2; ++i)
    {
        // condition for nonprime number
        if(n%i == 0)
        {
            flag = 1;
            break;
        }
    }

    if (n == 1) 
    {
      printf("1 is neither a prime nor a composite number.");
    }
    else 
    {
        if (flag == 0)
          printf("%d is a prime number.", n);
        else
          printf("%d is not a prime number.", n);
    }
    
    return 0;
}
}
//Program to find prime numbers in an interval
#include <stdio.h>
int main()
{
    int low, high, i, flag;
    printf("Enter two numbers(intervals): ");
    scanf("%d %d", &low, &high);

    printf("Prime numbers between %d and %d are: ", low, high);

    while (low < high)
    {
        flag = 0;

        for(i = 2; i <= low/2; ++i)
        {
            if(low % i == 0)
            {
                flag = 1;
                break;
            }
        }

        if (flag == 0)
            printf("%d ", low);

        ++low;
    }

    return 0;
}
// Program to print half pyramid using *
*
* *
* * *
* * * *
* * * * *


#include <stdio.h>
int main()
{
    int i, j, rows;

    printf("Enter number of rows: ");
    scanf("%d",&rows);

    for(i=1; i<=rows; ++i)
    {
        for(j=1; j<=i; ++j)
        {
            printf("* ");
        }
        printf("\n");
    }
    return 0;
}
// Program to print half pyramid a using numbers
1
1 2
1 2 3
1 2 3 4
1 2 3 4 5


#include <stdio.h>
int main()
{
    int i, j, rows;

    printf("Enter number of rows: ");
    scanf("%d",&rows);

    for(i=1; i<=rows; ++i)
    {
        for(j=1; j<=i; ++j)
        {
            printf("%d ",j);
        }
        printf("\n");
    }
    return 0;
}
//Program to print the following output
A
B B
C C C
D D D D
E E E E E


#include <stdio.h>
int main()
{
    int i, j;
    char input, alphabet = 'A';

    printf("Enter the uppercase character you want to print in last row: ");
    scanf("%c",&input);

    for(i=1; i <= (input-'A'+1); ++i)
    {
        for(j=1;j<=i;++j)
        {
            printf("%c", alphabet);
        }
        ++alphabet;

        printf("\n");
    }
    return 0;
}
//Program to print inverted half pyramid using *
* * * * *
* * * *
* * * 
* *
*


#include <stdio.h>
int main()
{
    int i, j, rows;

    printf("Enter number of rows: ");
    scanf("%d",&rows);

    for(i=rows; i>=1; --i)
    {
        for(j=1; j<=i; ++j)
        {
            printf("* ");
        }
        printf("\n");
    }
    
    return 0;
}
//Program to print Inverted half pyramid using numbers
1 2 3 4 5
1 2 3 4 
1 2 3
1 2
1


#include <stdio.h>
int main()
{
    int i, j, rows;

    printf("Enter number of rows: ");
    scanf("%d",&rows);

    for(i=rows; i>=1; --i)
    {
        for(j=1; j<=i; ++j)
        {
            printf("%d ",j);
        }
        printf("\n");
    }

    return 0;
}
//Program to print full pyramid using *
        *
      * * *
    * * * * *
  * * * * * * *
* * * * * * * * *



#include <stdio.h>
int main()
{
    int i, space, rows, k=0;

    printf("Enter number of rows: ");
    scanf("%d",&rows);

    for(i=1; i<=rows; ++i, k=0)
    {
        for(space=1; space<=rows-i; ++space)
        {
            printf("  ");
        }

        while(k != 2*i-1)
        {
            printf("* ");
            ++k;
        }

        printf("\n");
    }
    
    return 0;
}
//Program to print pyramid using numbers

        1
      2 3 2
    3 4 5 4 3
  4 5 6 7 6 5 4
5 6 7 8 9 8 7 6 5


#include <stdio.h>
int main()
{
    int i, space, rows, k=0, count = 0, count1 = 0;

    printf("Enter number of rows: ");
    scanf("%d",&rows);

    for(i=1; i<=rows; ++i)
    {
        for(space=1; space <= rows-i; ++space)
        {
            printf("  ");
            ++count;
        }

        while(k != 2*i-1)
        {
            if (count <= rows-1)
            {
                printf("%d ", i+k);
                ++count;
            }
            else
            {
                ++count1;
                printf("%d ", (i+k-2*count1));
            }
            ++k;
        }
        count1 = count = k = 0;

        printf("\n");
    }
    return 0;
}
// program to print inverted full pyramid using *

* * * * * * * * *
  * * * * * * *
    * * * * *
      * * *
        *


#include<stdio.h>
int main()
{
    int rows, i, j, space;

    printf("Enter number of rows: ");
    scanf("%d",&rows);

    for(i=rows; i>=1; --i)
    {
        for(space=0; space < rows-i; ++space)
            printf("  ");

        for(j=i; j <= 2*i-1; ++j)
            printf("* ");

        for(j=0; j < i-1; ++j)
            printf("* ");

        printf("\n");
    }

    return 0;
}
//Print Pascal's triangle

           1
         1   1
       1   2   1
     1   3   3    1
   1  4    6   4   1
 1  5   10   10  5   1 
Source Code

#include <stdio.h>
int main()
{
    int rows, coef = 1, space, i, j;

    printf("Enter number of rows: ");
    scanf("%d",&rows);

    for(i=0; i<rows; i++)
    {
        for(space=1; space <= rows-i; space++)
            printf("  ");

        for(j=0; j <= i; j++)
        {
            if (j==0 || i==0)
                coef = 1;
            else
                coef = coef*(i-j+1)/j;

            printf("%4d", coef);
        }
        printf("\n");
    }

    return 0;
}
// Print Floyd's Triangle.
1
2 3
4 5 6
7 8 9 10
Source Code

#include <stdio.h>
int main()
{
    int rows, i, j, number= 1;

    printf("Enter number of rows: ");
    scanf("%d",&rows);

    for(i=1; i <= rows; i++)
    {
        for(j=1; j <= i; ++j)
        {
            printf("%d ", number);
            ++number;
        }

        printf("\n");
    }

    return 0;
}

	
